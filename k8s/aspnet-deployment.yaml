---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: slowapp-aspnet
  labels:
    app: slowapp-aspnet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: slowapp-aspnet
  template:
    metadata:
      labels:
        app: slowapp-aspnet
    spec:
      containers:
        - name: slowapp-aspnet
          image: slowapp-aspnet:0.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: 'Development'
            - name: DB_CONNSTRING_MYSQL
              value: 'server=mysql; port=3306; database=mydb; username=dbuser; password=password; maximumpoolsize=100;'

          # lifecycle:
          #   preStop:
          #     exec:
          #       command: ['/bin/sh', '-c', '/bin/sleep 10']

          # readinessProbe:
          #   httpGet:
          #     path: /slow/0
          #     port: http

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: slowapp-aspnet
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: 1k
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '60'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '60'
    # nginx.ingress.kubernetes.io/proxy-send-timeout: '315'
spec:
  rules:
    - host: slowapp-aspnet.127.0.0.1.xip.io
      http:
        paths:
          - backend:
              serviceName: slowapp-aspnet
              servicePort: 80
            path: /

---
apiVersion: v1
kind: Service
metadata:
  name: slowapp-aspnet
spec:
  selector:
    app: slowapp-aspnet
  ports:
    - name: http
      targetPort: http
      protocol: TCP
      port: 80
